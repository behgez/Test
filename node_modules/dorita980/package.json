{
  "_from": "dorita980",
  "_id": "dorita980@3.0.11",
  "_inBundle": false,
  "_integrity": "sha1-7YuCcsGxuZVI5cKK8DXP5gixSss=",
  "_location": "/dorita980",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "dorita980",
    "name": "dorita980",
    "escapedName": "dorita980",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dorita980/-/dorita980-3.0.11.tgz",
  "_shasum": "ed8b8272c1b1b99548e5c28af035cfe608b14acb",
  "_spec": "dorita980",
  "_where": "/Users/wouter/git/com.irobot.roomba980",
  "author": {
    "name": "koalazak",
    "email": "zak.tux@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/koalazak/dorita980/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "mqtt": "^2.4.0",
    "request": "^2.74.0",
    "request-promise": "^4.1.1"
  },
  "deprecated": false,
  "description": "Unofficial iRobot Roomba 980 library sdk",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "eslint": "^3.8.0",
    "eslint-config-semistandard": "^7.0.0",
    "eslint-config-standard": "^6.2.0",
    "eslint-plugin-promise": "^3.0.0",
    "eslint-plugin-standard": "^2.0.1",
    "istanbul": "^0.4.0",
    "mocha": "^3.1.2",
    "proxyquire": "^1.7.10",
    "semistandard": "^9.1.0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/koalazak/dorita980#readme",
  "keywords": [
    "unofficial",
    "iRobot",
    "Roomba",
    "980",
    "library",
    "sdk",
    "robot",
    "local",
    "cloud",
    "alexa",
    "vacuum",
    "cleaner",
    "IoT"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "dorita980",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/koalazak/dorita980.git"
  },
  "scripts": {
    "check:style": "eslint .",
    "getpassword": "node ./bin/getpassword.js",
    "pretest": "npm install",
    "test": "_mocha -- $npm_package_config_mocha && npm run check:style",
    "test:coverage": "npm run test:coverage:run && npm run test:coverage:check",
    "test:coverage:check": "istanbul check-coverage --functions 80",
    "test:coverage:run": "istanbul cover _mocha -- $npm_package_config_mocha"
  },
  "version": "3.0.11"
}
